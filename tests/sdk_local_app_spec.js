const httpServer = require('http-server')

const PORT = 8000
const TEST_URL = `http://localhost:${PORT}`
var server

module.exports = {
  before: function(browser) {
    // Start a local server to serve the TodoMVC app.
    server = httpServer.createServer({ root: `${__dirname}/testapp` })
    server.listen(PORT)
  },

  after: function(browser) {
    // Shutdown the http server.
    server.close()
    // Close down the browser session.
    browser.end()
  },

  beforeEach: function(browser) {
    function getWindowLocation() {
      return window.location;
    }

    browser.url(TEST_URL)
    // Clear local storage between test cases.
    return browser.execute(getWindowLocation).then(function(location) {
      // NB If no page is loaded in the scneario then calling clearStorage will cause exception
      // so guard against this by checking hostname (If no page loaded then hostname == '')
      if (location.hostname.length > 0) {
        return browser.execute('window.localStorage.clear()');
      } else {
        return Promise.resolve();
      }
    });
  },

  'snapshots with autogenerated name': function(browser) {
    browser.percySnapshot()
  },

  'snapshots with provided name': function(browser) {
    browser.percySnapshot('snapshots with provided name')
  },

  'snapshots with provided name and widths': function(browser) {
    browser.percySnapshot('snapshots with provided name and widths', { widths: [768, 992, 1200] })
  },

  'snapshots with provided name and minHeight': function(browser) {
    browser.percySnapshot('snapshots with provided name and minHeight', { minHeight: 2000 })
  },

  'takes multiple snapshots in one test': function(browser) {
    browser
      .sendKeys('.new-todo', 'A thing to accomplish')
      .sendKeys('.new-todo', browser.Keys.ENTER)
      .percySnapshot('takes multiple snapshots - #1', { widths: [768, 992, 1200] })
      .click('input.toggle')
      .percySnapshot('takes multiple snapshots - #2', { widths: [768, 992, 1200] })
  },
}
